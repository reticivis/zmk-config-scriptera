#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

//&nice_view_spi { cs-gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>; };

// index of keymap layers
#define DEF 0 // default layer
#define MSK 1 // mouse key layer
#define MSC 2 // mouse scoll layer
#define SET 3 // settings layer

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <210>;
    quick_tap_ms = <0>;
    retro-tap;
};

// -----------------

/ {
	/* assign `input-listener` to all pointing devices */
    //trackball_central_listener {
    //        compatible = "zmk,input-listener";
    //        device = <&tball1>;
	//};
    //trackball_peripheral_listener {
    //        compatible = "zmk,input-listener";
    //        device = <&vtball1>;
	//};

    /* input config for mouse move mode on default layer (DEF & MSK) */
    tb0_mmv_ibl {
            compatible = "zmk,input-behavior-listener";
            device = <&tball0>;
            layers = <0 1 3>;
            evt-type = <INPUT_EV_REL>;
            x-input-code = <INPUT_REL_X>;
            y-input-code = <INPUT_REL_Y>;
            scale-multiplier = <1>;
            scale-divisor = <1>;
    };
    tb1_mmv_ibl {
            compatible = "zmk,input-behavior-listener";
            device = <&tball1>;
            layers = <0 1 3>;
            evt-type = <INPUT_EV_REL>;
            x-input-code = <INPUT_REL_X>;
            y-input-code = <INPUT_REL_Y>;
            scale-multiplier = <1>;
            scale-divisor = <1>;
    };
    tb1_mmv_ibl_peripheral {
            compatible = "zmk,input-behavior-listener";
            device = <&tball1_1>;
            layers = <0 1 3>;
            evt-type = <INPUT_EV_REL>;
            x-input-code = <INPUT_REL_X>;
            y-input-code = <INPUT_REL_Y>;
            scale-multiplier = <1>;
            scale-divisor = <1>;
    };

    // trackball_snipe_listener {
    //     compatible = "zmk,input-behavior-listener";
    //     device = <&vtrackball>;
    //     layers = <3>;
    //     evt-type = <INPUT_EV_REL>;
    //     x-input-code = <INPUT_REL_X>;
    //     y-input-code = <INPUT_REL_Y>;
    //     scale-multiplier = <1>;
    //     scale-divisor = <16>;
    // };

    /* input config for mouse scroll mode on momentary mouse scoll layer (MSC) */
    tb0_msl_ibl {
            compatible = "zmk,input-behavior-listener";
            device = <&tball0>;
            layers = <2>;
            evt-type = <INPUT_EV_REL>;
            x-input-code = <INPUT_REL_MISC>;
            y-input-code = <INPUT_REL_WHEEL>;
            bindings = <&ib_wheel_scaler 1 8>;
    };
    tb1_msl_ibl_central {
            compatible = "zmk,input-behavior-listener";
            device = <&tball1>;
            layers = <2>;
            evt-type = <INPUT_EV_REL>;
            x-input-code = <INPUT_REL_MISC>;
            y-input-code = <INPUT_REL_WHEEL>;
            bindings = <&ib_wheel_scaler 1 8>;
    };
    tb1_msl_ibl_peripheral {
            compatible = "zmk,input-behavior-listener";
            device = <&tball1_1>;
            layers = <2>;
            evt-type = <INPUT_EV_REL>;
            x-input-code = <INPUT_REL_MISC>;
            y-input-code = <INPUT_REL_WHEEL>;
            bindings = <&ib_wheel_scaler 1 8>;
    };

    /* adjust cooldown waiting period for mouse key layer (MSK) after activated */
    ib_tog_layer: ib_tog_layer {
            compatible = "zmk,input-behavior-tog-layer";
            #binding-cells = <1>;
            time-to-live-ms = <1000>;   
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */
    ib_wheel_scaler: ib_wheel_scaler {
            compatible = "zmk,input-behavior-scaler";
            #binding-cells = <2>;
            evt-type = <INPUT_EV_REL>;
            input-code = <INPUT_REL_WHEEL>;
    };

// -----------------

    behaviors {
        tsl: behavior_trackball_scroll {
            compatible = "zmk,behavior-point-device-incremental";
            #trackball-binding-cells = <0>;
            mode = "scroll-mode";
            flavor = "default";
            scale_mode = "dividor";
            scale_factor = <4>;
            smoothing;
        };

        tkp_fast: behavior_trackball_key_press {
            compatible = "zmk,behavior-point-device-directional";
            #trackball-binding-cells = <4>;
            mode = "distance-mode";
            flavor = "2-dim";
            step_size = <50>;
        };
    };

// -----------------

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        DEF_layer {
            bindings = <
&kp Q           &kp W           &kp E               &kp R               &kp T       &kp Y   &kp U               &kp I               &kp O           &kp P
&mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_SHIFT D    &mt LEFT_CONTROL F  &kp G       &kp H   &mt RIGHT_CONTROL J &mt RIGHT_SHIFT K   &mt RIGHT_ALT L &mt RIGHT_GUI SEMICOLON
&kp Z           &kp X           &kp C               &kp V               &kp B       &kp N   &kp M               &kp COMMA           &kp DOT         &kp SLASH
&kp BACKSPACE   &lt 2 TAB                                                                                                           &lt 3 ENTER     &lt 1 SPACE
            >;
        };

        // Numbers and arrow key navigation

        MSK_layer {
            bindings = <
&kp KP_DIVIDE   &kp N7    &kp N8   &kp N9   &kp KP_MULTIPLY        &kp RIGHT_BRACKET   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS   &kp MINUS       &kp EQUAL
&kp KP_COMMA    &kp N4    &kp N5   &kp N6   &kp KP_DOT             &kp APOSTROPHE      &kp RIGHT_CONTROL       &kp RIGHT_SHIFT         &kp RIGHT_ALT   &kp RIGHT_GUI
&kp KP_MINUS    &kp N1    &kp N2   &kp N3   &kp KP_PLUS            &kp RIGHT_BRACKET   &kp LEFT_BRACE          &kp RIGHT_BRACE         &kp BACKSLASH   &kp GRAVE
&kp KP_N0       &kp KP_EQUAL                                                                                                                    &none           &none
            >;
        };

        // Symbols organized by use

        MSC_layer {
            bindings = <
&none           &none           &none           &none               &none       &kp C_AC_SCROLL_UP      &kp HOME    &kp PG_UP   &kp PG_DN   &kp END
&kp LEFT_WIN    &kp LEFT_ALT    &kp LEFT_SHIFT  &kp LEFT_CONTROL    &none       &kp K_APP               &mkp LCLK   &mkp RCLK   &mkp MCLK   &mkp MB4
&none           &none           &none           &none               &none       &kp C_AC_SCROLL_DOWN    &kp LEFT    &kp UP      &kp DOWN    &kp RIGHT
&none           &none                                                                                                              &none       &none
            >;
        };

        // Used to change the keyboard's settings

        SET_layer {
            bindings = <
&kp F9  &kp F10 &kp F11 &kp F12 &kp PSCRN               &kp SLCK    &none             &none           &none           &bootloader
&kp F5  &kp F6  &kp F7  &kp F8  &kp INS                 &kp CLCK    &kp RIGHT_CONTROL &kp RIGHT_SHIFT &kp RIGHT_ALT   &kp RIGHT_GUI
&kp F1  &kp F2  &kp F3  &kp F4  &kp PAUSE_BREAK         &kp SLCK    &none             &none           &none           &sys_reset
&kp ESC &kp DEL                                                                               &none           &none
            >;
        };
    };
};